.question-input {
  position: relative; // For positioning of highlighter-element
  display: block; // For positioning of highlighter-element

  // Highlighter-element:
  &::before {
    display: block;
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    border: 2px solid transparent;
    border-radius: 10px;
    z-index: 3;
    opacity: 0.9;
    pointer-events: none;
  }
  &.is-highlighted::before,
  &:target::before {
    content: '';
    animation: highlight-fade-out 4s 0s 1 forwards;
    outline: none; // Is replaced by border-style
  }
}

@keyframes highlight-fade-out {
  0% {
    background-color: var(--ion-color-primary);
    border-color: var(--ion-color-primary);
  }
  80% {
    border-color: var(--ion-color-primary);
  }
  100% {
    background-color: transparent;
    border-color: transparent;
  }
}

// Make 'readonly'-inputs look less 'active':
ion-item.is-readonly {
  --full-highlight-height: 0;

  input,
  textarea {
    cursor: default;
  }

  // Hide the number-input 'spinner' (pseudo-)elements in Firefox:
  input[type='number'] {
    -moz-appearance: textfield;
  }
}

.answer-state {
  border: 1px solid var(--ion-color-light);
  border-radius: 4px;

  &.is-pending,
  &.is-in-progress,
  &.is-saved,
  &.is-error {
    border-inline-end-width: 4px;
  }

  &.is-error {
    border-inline-end-color: var(--ion-color-danger);
  }
  &.is-saved {
    border-inline-end-color: var(--ion-color-dark);
  }
  &.is-in-progress {
    border-inline-end-style: dotted;
    border-inline-end-color: gold;
  }
  &.is-pending {
    border-inline-end-color: var(--ion-color-tertiary);
    border-inline-end-style: solid; // `is-pending` is always applied together with `is-in-progress`
  }
}
